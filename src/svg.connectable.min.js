(function(){function t(t,n){var o={};void 0===n&&(n=t,t={}),e=t.container||this.parent()||e;var a=this;if(r=t.markers||this.parent()||r,o.source=a,o.target=n,o.type=t.type||"straight",t.connector){var c=SVG.get(t.connector.node.attributes.href.value.slice(1));if("path"==c.type){o.connector=t.connector;var i=c.array().value;if("M"!=i[1][0]||"M"!=i[2][0]){var h=c.rbox();i.splice(0,0,["M",h.x+h.width/2,h.y],["M",h.x+h.width/2,h.y2]),c.plot(i)}o.connector.target=c}}return o.connector||(o.connector=e.path().attr("connectortype","default").fill("none")),o.sourceAttach=t.sourceAttach||"center",o.targetAttach=t.targetAttach||"center",o.color=t.color||"#000000",o.setMarker=function(t,e,r){if(r=r||this,e&&(r.markers=e),t&&"null"!=t)if("default"==t){var t=r.markers.marker(30,30),n="triangle-"+Math.random().toString(16);r.connector.attr("marker-end","url(#"+n+")"),t.attr({id:n,viewBox:"0 0 30 30",refX:"30",refY:"15",markerUnits:"strokeWidth",markerWidth:"12",markerHeight:"15"}),t.path().attr({d:"M 0 0 L 30 15 L 0 30 z"}),r.marker=t,r.marker.fill(r.color)}else r.marker=t;else if(r.marker=null,r.connector.attr("marker-end")){var o=r.connector.attr("marker-end");SVG.get(o.slice(5,o.length-1)).remove(),r.connector.removeClass("marker-end")}return r},o.setMarker(t.marker,r),o.computeConnectorCoordinates=function(t){t=t||this;var e={},r=t.source.rbox(),n=t.target.rbox();if("center"==t.sourceAttach)e.point1=[r.cx,r.cy];else if("ellipse"==t.source.type){var o=parseFloat(t.source.attr("rx")),a=parseFloat(t.source.attr("ry")),c=t.source.cx(),i=t.source.cy(),h=t.target.cx(),l=t.target.cy(),s=h-c,p=l-i,y=Math.sqrt(s*s+p*p),g=s/y,u=p/y,x=c+o*g,f=i+a*u;e.point1=[x+o/2,f+a/2]}else if("path"==t.source.type){var v=JSON.parse(JSON.stringify(t.source.array().value));"Z"==v[v.length-1][0]&&v.splice(v.length-1,1);var d=v,m="point2"}else var v=[["M",r.x+r.width/2,r.y],["L",r.x+r.width,r.y+r.height/2],["L",r.x+r.width/2,r.y+r.height],["L",r.x,r.y+r.height/2]],d=v,m="point2";if("center"==t.targetAttach)e.point2=[n.x+n.width/2,n.y+n.height/2];else if("ellipse"==t.target.type){var M=parseFloat(t.target.attr("rx")),k=parseFloat(t.target.attr("ry")),c=t.source.cx(),i=t.source.cy(),h=t.target.cx(),l=t.target.cy(),s=h-c,p=l-i,y=Math.sqrt(s*s+p*p),g=s/y,u=p/y,w=c+(y-M-5)*g,C=i+(y-k-5)*u;e.point2=[w+M/2,C+k/2]}else if("path"==t.target.type){var A=JSON.parse(JSON.stringify(t.target.array().value));"Z"==A[A.length-1][0]&&A.splice(A.length-1,1);var d=A,m="point1"}else var A=[["M",n.x+n.width/2,n.y],["L",n.x+n.width,n.y+n.height/2],["L",n.x+n.width/2,n.y+n.height],["L",n.x,n.y+n.height/2]],d=A,m="point1";if(!e.point1||!e.point2)if(e.min=Number.MAX_VALUE,e.point1||e.point2){m=e[m];for(var L=0;L<d.length;L++){var S=Math.pow(m[0]-d[L][d[L].length-2],2)+Math.pow(m[1]-d[L][d[L].length-1],2);e.min>S&&(e.min=S,e.point=[d[L][d[L].length-2],d[L][d[L].length-1]])}e.point1?e.point2=e.point:e.point1=e.point}else for(var L=0;L<v.length;L++)for(var b=0;b<A.length;b++){var S=Math.pow(A[b][A[b].length-2]-v[L][v[L].length-2],2)+Math.pow(A[b][A[b].length-1]-v[L][v[L].length-1],2);e.min>S&&(e.min=S,e.point1=[v[L][v[L].length-2],v[L][v[L].length-1]],e.point2=[A[b][A[b].length-2],A[b][A[b].length-1]])}var V=e.point1,G=e.point2;if("curved"==t.type)var N=({x:t.source.cx(),y:t.source.cy()},{x:t.target.cx(),y:t.target.cy()},{x:V[0],y:V[1]+(G[1]-V[1])/5}),O={x:G[0],y:G[1]-(G[1]-V[1])/5},q={x:N.x+(O.x-N.x)/2,y:N.y+(O.y-N.y)/2},F=[["M",V[0],V[1]],["C",N.x,N.y,N.x,N.y,q.x,q.y],["C",O.x,O.y,O.x,O.y,G[0],G[1]]];else var F=[["M",V[0],V[1]],["L",G[0],G[1]]];return F},a.cons=a.cons||[],a.cons.push(o),o.update=function(){if("default"==o.connector.attr("connectortype"))o.connector.plot(o.computeConnectorCoordinates(o));else{var t=o.connector.target.array().value,e=o.computeConnectorCoordinates(o),r=[e[0][1],e[0][2]],n=[e[e.length-1][e[e.length-1].length-2],e[e.length-1][e[e.length-1].length-1]],a=Math.sqrt(Math.pow(n[0]-r[0],2)+Math.pow(n[1]-r[1],2)),c=Math.sqrt(Math.pow(t[1][1]-t[0][1],2)+Math.pow(t[1][2]-t[0][2],2)),i=a/c,h=Math.atan((n[1]-r[1])/(n[0]-r[0]));h>0&&n[1]<r[1]?h=Math.PI+h:0>h&&n[1]>r[1]&&n[0]<r[0]&&(h=Math.PI+h);var l={x:r[0]+(n[0]-r[0])/2,y:r[1]+(n[1]-r[1])/2},s=Math.atan((t[1][2]-t[0][2])/(t[1][1]-t[0][1])),p={x:o.connector.target.cx(),y:o.connector.target.cy()},y=[1,0,0,1,l.x-p.x,l.y-p.y],g=y[0],u=y[1],x=y[2],f=y[3],v=y[4],d=y[5],m=Math.sin(-h+s),M=Math.cos(-h+s);v=-g*l.x-x*l.y+v,d=-u*l.x-f*l.y+d,y[0]=g*M+u*m,y[1]=-g*m+u*M,y[2]=x*M+f*m,y[3]=-x*m+M*f,y[4]=M*v+m*d,y[5]=M*d-m*v,y[4]=g*l.x+x*l.y+y[4],y[5]=u*l.x+f*l.y+y[5];var g=1,u=0,x=0,f=1,v=(-g*p.x-x*p.y)*i,d=(-u*p.x-f*p.y)*i,k=[];k[0]=g*i,k[1]=u*i,k[2]=x*i,k[3]=f*i,k[4]=g*p.x+x*p.y+v,k[5]=u*p.x+f*p.y+d;var w=[];w[0]=k[0]*y[0]+k[1]*y[2],w[1]=k[0]*y[1]+k[1]*y[3],w[2]=k[2]*y[0]+k[3]*y[2],w[3]=k[2]*y[1]+k[3]*y[3],w[4]=y[0]*k[4]+y[2]*k[5]+y[4],w[5]=y[1]*k[4]+y[3]*k[5]+y[5],w=new SVG.Matrix(w.join(",")),o.connector.transform(w)}},o.update(),a.on("dragmove",o.update),n.on("dragmove",o.update),o.setConnectorColor=function(t,e){e=e||this,e.color=t,e.connector.stroke(t),e.marker&&e.marker.fill(t)},o.setConnectorColor(o.color),o.setConnectorAttachment=function(t,e,r){r=r||this,r[t+"Attach"]=e,r.update()},o.setConnector=function(t,r){r=r||this,t&&(r.connector.remove(),"default"==t?(r.connector=e.path().attr("connectortype","default").fill("none"),r.setConnectorColor(r.color)):r.connector=t,r.update())},o.setType=function(t,e){e=e||this,-1!=["straight","curved"].indexOf(t)&&e.type!=t&&(e.type=t,e.update())},o}var e=null,r=null;SVG.extend(SVG.Element,{connectable:t})}).call(this);
